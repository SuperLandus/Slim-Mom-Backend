{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Slim Mom App",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "This is a documentation of slim mom app\n"
  },
  "servers": [
    {
      "url": "https://slimmom-backend-s8n8.onrender.com/"
    },
    {
      "url": "https://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "Products",
      "description": "Operations about products."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "Users",
      "description": "Operations about users and their products."
    }
  ],
  "paths": {
    "/register": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Register a new user",
        "operationId": "register",
        "description": "Register user",
        "security": [],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "name",
                  "email",
                  "password"
                ],
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "John Doe"
                  },
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully registered",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully register."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "409": {
            "$ref": "#/components/responses/409"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "Autherization operations",
        "operationId": "login",
        "description": "Login user",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "email",
                  "password"
                ],
                "properties": {
                  "email": {
                    "type": "string",
                    "format": "email",
                    "example": "johndoe@example.com"
                  },
                  "password": {
                    "type": "string",
                    "format": "password",
                    "example": "securePassword123"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User login is okey",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully login."
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/user"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/logout": {
      "post": {
        "tags": [
          "Auth"
        ],
        "summary": "User Logout",
        "operationId": "logout",
        "description": "Clears authentication token from cookies and ends the user session.",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Logout successful",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Logout successful."
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/products/searchProducts": {
      "get": {
        "tags": [
          "Products"
        ],
        "summary": "Get products by search query",
        "operationId": "getProducts",
        "description": "Get products by search query",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "query",
            "name": "title",
            "required": true,
            "schema": {
              "type": "string",
              "example": "amaranth"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Get products matching the search query",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Products matching your search!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/products"
                    }
                  }
                }
              }
            }
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/products": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Add a product to the user's daily",
        "operationId": "addProductToUsersDaily",
        "description": "Add a product to the user's daily",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "productId",
                  "date",
                  "productWeight"
                ],
                "properties": {
                  "productId": {
                    "type": "date",
                    "example": "67d5d211fa93b3b9e8962774"
                  },
                  "date": {
                    "type": "string",
                    "format": "date",
                    "example": "2025-12-31"
                  },
                  "productWeight": {
                    "type": "number",
                    "example": 100
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Product added to the user's daily",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "example": 201
                    },
                    "message": {
                      "type": "string",
                      "example": "Product added to my products successfuly"
                    },
                    "product": {
                      "type": "object",
                      "properties": {
                        "productId": {
                          "type": "string",
                          "example": "67d5d211fa93b3b9e8962774"
                        },
                        "date": {
                          "type": "string",
                          "format": "date",
                          "example": "2025-12-31"
                        },
                        "productWeight": {
                          "type": "number",
                          "example": 100
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      },
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get all products of the user for the selected date",
        "operationId": "getAllProductsOfUserForSelectedDate",
        "description": "Get all products of the user for the selected date",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date",
              "example": "2025-12-31"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Products of the user for the selected date",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully got products!"
                    },
                    "products": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "string",
                            "example": "67d5d211fa93b3b9e8962774"
                          },
                          "date": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-31"
                          },
                          "productWeight": {
                            "type": "number",
                            "example": 100
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/products/{productId}": {
      "delete": {
        "tags": [
          "Users"
        ],
        "summary": "Delete product by id for selected date",
        "description": "This endpoint allows user to delete product by id for selected date",
        "operationId": "deleteUserProduct",
        "parameters": [
          {
            "name": "productId",
            "in": "path",
            "description": "Product id",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "date",
            "in": "query",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Product deleted successfully and no content to return"
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    },
    "/user/my-daily-calories": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's daily calories by date",
        "description": "This endpoint allows user to get daily calories by date",
        "operationId": "getUserDailyCalories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "date",
            "in": "query",
            "description": "Date",
            "required": true,
            "schema": {
              "type": "string",
              "format": "date"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User's daily calories by date",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "User's daily calories by date"
                    },
                    "date": {
                      "type": "string",
                      "format": "date",
                      "example": "2025-12-31"
                    },
                    "dailyCalories": {
                      "type": "number",
                      "example": 2000
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    },
    "/user/my-daily-calory-needs": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get logged in user's daily calory needs per day",
        "description": "This endpoint allows logged in user to get calory needs per day",
        "operationId": "getMyDailyRate",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "User's calory needs per day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "successfully got daily rate!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "dailyRate": {
                          "type": "number",
                          "example": 2000
                        },
                        "notAllowedFoods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "sugar",
                            "salt"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          }
        }
      }
    },
    "/user/daily-calory-needs": {
      "post": {
        "tags": [
          "Users"
        ],
        "summary": "Get user's daily calory needs per day for given informations",
        "description": "This endpoint allows user to get calory needs per day for given informations",
        "operationId": "getDailyRate",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "required": [
                  "weight",
                  "height",
                  "age",
                  "desiredWeight",
                  "bloodType"
                ],
                "properties": {
                  "weight": {
                    "type": "number",
                    "example": 70
                  },
                  "height": {
                    "type": "number",
                    "example": 180
                  },
                  "age": {
                    "type": "number",
                    "example": 25
                  },
                  "desiredWeight": {
                    "type": "number",
                    "example": 65
                  },
                  "bloodType": {
                    "type": "number",
                    "example": 1
                  }
                }
              }
            }
          }
        },
        "security": [],
        "responses": {
          "200": {
            "description": "User's calory needs per day",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "code": {
                      "type": "number",
                      "example": 200
                    },
                    "status": {
                      "type": "string",
                      "example": "success"
                    },
                    "message": {
                      "type": "string",
                      "example": "successfully got daily rate!"
                    },
                    "data": {
                      "type": "object",
                      "properties": {
                        "dailyRate": {
                          "type": "number",
                          "example": 2000
                        },
                        "notAllowedFoods": {
                          "type": "array",
                          "items": {
                            "type": "string"
                          },
                          "example": [
                            "sugar",
                            "salt"
                          ]
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/400"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "user": {
        "type": "object",
        "required": [
          "name",
          "email",
          "password"
        ],
        "properties": {
          "_id": {
            "description": "Student's id",
            "type": "string",
            "example": "65e4decdd286b30065d54af9"
          },
          "name": {
            "description": "Student's name",
            "type": "string",
            "example": "John Doe"
          },
          "email": {
            "description": "Student's email",
            "type": "string",
            "example": "johndoe@gmail.com"
          },
          "password": {
            "description": "Student's password",
            "type": "string",
            "example": "12345678"
          }
        }
      },
      "products": {
        "type": "object",
        "required": [
          "categories",
          "weight",
          "title",
          "calories",
          "groupBloodTypeNotAllowed"
        ],
        "properties": {
          "_id": {
            "description": "Product's id",
            "type": "string",
            "example": "5d51694902b2373622ff5d52"
          },
          "categories": {
            "description": "Product's category",
            "type": "string",
            "example": "Vegetables and Herbs"
          },
          "weight": {
            "description": "Product's weight",
            "type": "number",
            "example": 100
          },
          "title": {
            "description": "Product's name",
            "type": "string",
            "example": "Amaranth Leaves"
          },
          "calories": {
            "description": "Product's Calories",
            "type": "number",
            "example": 23
          },
          "groupBloodNotAllowed": {
            "description": "Product not allowed for blood types:",
            "type": "array",
            "example": "[ null, false, false, false, false ]"
          }
        }
      }
    },
    "responses": {
      "400": {
        "description": "Bad Request – The server cannot process the request due to client error.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 400
                },
                "message": {
                  "type": "string",
                  "example": "Invalid request. Please check the provided data."
                }
              }
            }
          }
        }
      },
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "message",
                "data"
              ],
              "properties": {
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not Found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "NotFoundError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "User not found"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "409": {
        "description": "Conflict error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 409
                },
                "message": {
                  "type": "string",
                  "example": "ConflictError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Email already exists"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}